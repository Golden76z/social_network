version: '3.8'

services:
  # Go Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: social-network-backend
    ports:
      - "8080:8080"
    volumes:
      - server_uploads:/app/uploads
      - server_db:/app
    environment:
      - ENV=production
      - PORT=8080
      - DB_PATH=/app/social_network.db
      - MIGRATIONS_DIR=/app/migrations
      - JWT_EXPIRATION_HOURS=24
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
      - LOG_LEVEL=info
      - ENABLE_REGISTRATION=true
      - ENABLE_FILE_UPLOAD=true
      - ENABLE_CHAT=true
    networks:
      - social-network
    restart: unless-stopped

  # Next.js Frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: social-network-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080/ws
    depends_on:
      - server
    networks:
      - social-network
    restart: unless-stopped

  # Optional: Database Admin (if you want to manage SQLite)
  db-admin:
    image: alecthw/sqlite3-web:latest
    container_name: social-network-db-admin
    ports:
      - "8888:8080"
    volumes:
      - server_db:/data
    networks:
      - social-network
    restart: unless-stopped
    profiles:
      - tools  # Only start this with docker-compose --profile tools up

volumes:
  server_uploads:
    driver: local
  server_db:
    driver: local

networks:
  social-network:
    driver: bridge
