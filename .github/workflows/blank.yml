name: Fullstack CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests (for emergency deployments)'
        type: boolean
        default: false

env:
  NODE_VERSION: '20.19.2'
  GO_VERSION: '1.21'

jobs:
  setup:
    name: 🧰 Setup Environment
    runs-on: ubuntu-latest
    outputs:
      reviewer: ${{ steps.random-reviewer.outputs.reviewer }}
      pr_number: ${{ steps.pr-info.outputs.pr_number }}
      branch_name: ${{ steps.branch-info.outputs.branch_name }}
      commit_sha: ${{ steps.commit-info.outputs.short_sha }}
    steps:
      - name: 💼 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Extract PR/Branch Info
        id: pr-info
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "pr_number=${{ github.event.number }}" >> "$GITHUB_OUTPUT"
          else
            echo "pr_number=none" >> "$GITHUB_OUTPUT"
          fi

      - name: 🌿 Extract Branch Info
        id: branch-info
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "branch_name=${{ github.head_ref }}" >> "$GITHUB_OUTPUT"
          else
            echo "branch_name=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          fi

      - name: 🔢 Extract Commit Info
        id: commit-info
        run: |
          echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> "$GITHUB_OUTPUT"

      # Node.js setup for client
      - name: ♻️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          working-directory: client  # 👈 Critical fix

      - name: 🧪 Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}  # 👈 Updated path
          restore-keys: ${{ runner.os }}-go-

      - name: 🧠 Random reviewer selector
        id: random-reviewer
        run: |
          reviewers=(Golden76z Aukryx alex-Valauney Alkzim974 nicgen)
          echo "reviewer=${reviewers[$((RANDOM % ${#reviewers[@]}))]}" >> "$GITHUB_OUTPUT"

      - name: 🔔 Pipeline Started Notification
        if: github.event_name == 'pull_request'
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            🚀 **Pipeline Started** 
            📋 **PR #${{ steps.pr-info.outputs.pr_number }}**: ${{ github.event.pull_request.title }}
            👤 **Author**: ${{ github.actor }}
            🌿 **Branch**: `${{ steps.branch-info.outputs.branch_name }}`
            🔍 **Reviewer**: @${{ steps.random-reviewer.outputs.reviewer }}

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      # Scan both directories
      - name: 🔍 Run Trivy (client)
        uses: aquasecurity/trivy-action@master
        with:
          scan-ref: 'client'
          format: 'sarif'
          output: 'client-trivy-results.sarif'

      - name: 🔍 Run Trivy (server)
        uses: aquasecurity/trivy-action@master
        with:
          scan-ref: 'server'
          format: 'sarif'
          output: 'server-trivy-results.sarif'

      - name: 📄 Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: |  # Upload both reports
            client-trivy-results.sarif
            server-trivy-results.sarif

      - name: 🔒 Audit npm packages
        run: npm audit --audit-level=high
        working-directory: client  # 👈 Run in client dir
        continue-on-error: true

  client:
    name: 🌐 Client Tests
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !inputs.skip_tests }}
    defaults:  # 👈 All steps run in client/ by default
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: ✅ Lint
        run: npm run lint

      - name: 🧪 Run Tests
        run: npm run test -- --coverage --watchAll=false

      - name: 📊 Comment Test Coverage on PR
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info  # Path is relative to client/
          delete-old-comments: true

      - name: 📄 Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: client-coverage
          path: client/coverage

      - name: 🏗️ Build client
        run: npm run build

      - name: 📦 Upload build
        uses: actions/upload-artifact@v3
        with:
          name: client-build
          path: client/dist

  server:
    name: 💻 Server Tests
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !inputs.skip_tests }}
    defaults:  # 👈 All steps run in server/ by default
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - name: 🐹 Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: ✅ Lint (Go)
        run: |
          go fmt ./...
          go vet ./...

      - name: 🧪 Run Tests (Go)
        run: go test -v -coverprofile=coverage.out -race ./...

      - name: 📊 Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: 📄 Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: server-coverage
          path: |
            server/coverage.out
            server/coverage.html

      - name: 🏗️ Build server
        run: go build -o main .

  notify-failure:
    name: 🚨 Failure Notification
    runs-on: ubuntu-latest
    needs: [setup, security, client, server]
    if: failure()
    steps:
      - name: "🔔 Discord: Pipeline Failed"
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            🚨 **PIPELINE FAILED** 🚨
            📋 **${{ github.event_name == 'pull_request' && format('PR #{0}', github.event.number) || 'Push to main' }}**
            👤 **Author**: ${{ github.actor }}
            🌿 **Branch**: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
            🔗 **View Logs**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}